To start this handson lab,you need following resources.


*******************************************************************************************************************
prerequisites

1.	server.cnl.com – 1 CPU – 1GB RAM (Python 2.7) - Ansible Server
2.	node1.cnl.com – 1 CPU – 1GB RAM ( python 2.6 and above) - Ansible Client 1
3.	node2.cnl.com – 1 CPU – 1GB RAM ( python 2.6 and above) - Ansible Client 2

from ansible server login as an ansible user as per class 4.From ansible user execute below command

ansible all -m ping

this above ping command should return with ping / pong green color.

*******************************************************************************************************************
Step 1 : ansible-doc
Step 2: .yaml or .yml files
Step 3 : How to construct playbook
Step 4:  How to ensure syntax issues in playbook before you execute playbooks
Step 5:  How to see detailed output while playbook getting executed
Step 6:  Sample Playbook 1
Step 7:  Sample Playbook 2
Step 8:  Sample Playbook 3
Step 9:  httpd installation playbook and error (privilege_escalation)
Step 10:  copy paste playbooks from internet - How to avoid intending issues
*******************************************************************************************************************

Variables

In general variables are used to store any values later which are used. 
In ansible variable working is same we cant also store service name that we want to install or start. 

Variables are very useful instead of doing changes in every task simply change the variable value. 

For eg : if you want to install httpd then simply assign it to the variable and use that variable in the playbook rather than giving same value again and again to the task.

There are two types of variables :
1.	Local : These are only accessible within the file 
2.	Global : These are accessible to the multiple files.

Eg: 

Declared local variable

---
- name: installing packages
  hosts: all
  vars:
   - websoft: httpd
  tasks:
   - name: install {{ websoft }}
     yum:
      name: "{{ websoft }}"	
	  state: latest
   - name: start the {{ websoft }} service
     service:
	  name: "{{ websoft }}"
	  state: restarted


Output:
 
In order to use global variable you have to declare it in your inventory file i.e. hosts file where you have added all your servers with this add global variable also.

Eg:
vim hosts

node1
node2

[prod]
node1

[backup]
node2

[all:vars]
websoft=httpd

[prod:vars]
websoftprod=httpd

[backup:vars]
websoftbackup=httpd



Declare websoft. Here all means it will available to all machines. 
 
Removing the local variable.
 
After executing same output will be there.

You can also restrict the variable for particular machines. 
Eg:
vim hosts

---
- name: installing packages
  hosts: all
  vars:
   - websoft: httpd
  tasks:
   - name: install {{ websoft }}
     yum:
      name: "{{ websoft }}"	
	  state: latest
   - name: start the {{ websoft }} service
     service:
	  name: "{{ websoft }}"
	  state: restarted
	  


---
- name: installing packages
  hosts: all
  vars:
   - websoftprod: httpd
  tasks:
   - name: install {{ websoftprod }}
     yum:
      name: "{{ websoftprod }}"	
	  state: latest
   - name: start the {{ websoftprod }} service
     service:
	  name: "{{ websoftprod }}"
	  state: restarted
	  


---
- name: installing packages
  hosts: all
  vars:
   - websoftbackup: httpd
  tasks:
   - name: install {{ websoftprod }}
     yum:
      name: "{{ websoftbackup }}"	
	  state: latest
   - name: start the {{ websoftbackup }} service
     service:
	  name: "{{ websoftbackup }}"
	  state: restarted